#
# ~./config/hypr/binds.conf
# Hyprland binds config
# Check https://wiki.hyprland.org/ for more info
#

### Section
# Description
# bind = MODS, key, dispatcher, params

### Binds config
binds {
    # if disabled, will not pass the mouse events to apps / dragging windows around if a keybind has been triggered. | bool | false
    pass_mouse_when_bound = false

    # in ms, how many ms to wait after a scroll event to allow to pass another one for the binds. | int | 300
    scroll_event_delay = 300

    # If enabled, an attempt to switch to the currently focused workspace will instead switch to the previous workspace. Akin to i3’s auto_back_and_forth. | bool | false
    workspace_back_and_forth = true

    # If enabled, workspaces don’t forget their previous workspace, so cycles can be created by switching to the first workspace in a sequence, then endlessly going to the previous workspace. | bool | false
    allow_workspace_cycles = true

    # Whether switching workspaces should center the cursor on the workspace (0) or on the last active window for that workspace (1) | int | 0
    #hyperland-git workspace_center_on = 1

    # sets the preferred focus finding method when using focuswindow/movewindow/etc with a direction. 0 - history (recent have priority), 1 - length (longer shared edges have priority) | int | 0
    focus_preferred_method = 1

    # If enabled, dispatchers like moveintogroup, moveoutofgroup and movewindoworgroup will ignore lock per group. | bool | false
    ignore_group_lock = false

    # If enabled, when on a fullscreen window, movefocus will cycle fullscreen, if not, it will move the focus in a direction. | bool | true
    #hyprland-git movefocus_cycles_fullscreen = true
}

### Flags
# l -> locked, aka. works also when an input inhibitor (e.g. a lockscreen) is active.
# r -> release, will trigger on release of a key.
# e -> repeat, will repeat when held.
# n -> non-consuming, key/mouse events will be passed to the active window in addition to triggering the dispatcher.
# m -> mouse, see below
# t -> transparent, cannot be shadowed by other binds.

### Hyprland controls
# Exits the compositor with no questions asked.
bind = CTRL_ALT, delete, exit,

# Forces the renderer to reload all resources and outputs
bind = SUPER_SHIFT, c, forcerendererreload,

### Laptop lid
bindl = , switch:off:Lid Switch, exec, hyprctl dispatch dpms on eDP-1
bindl = , switch:on:Lid Switch, exec, hyprctl dispatch dpms off eDP-1

### Laptop control
# Backlight
bindle = , XF86MonBrightnessUp, exec, lightctl up
bindle = , XF86MonBrightnessDown, exec, lightctl down

# Keyboard lights
bindle = , XF86KbdBrightnessUp, exec, keyboard-leds up
bindle = , XF86KbdBrightnessDown, exec, keyboard-leds down
bind = , XF86Launch3, exec, keyboard-leds next

# Audio
bindle = , XF86AudioRaiseVolume, exec, volumectl -u up
bindle = , XF86AudioLowerVolume, exec, volumectl -u down
bindl = , XF86AudioMute, exec, volumectl toggle-mute
bindl = , XF86AudioMicMute, exec, volumectl -m %

# Media control
bind = , XF86AudioPlay, exec, playerctl play-pause
bind = , XF86AudioStop, exec, playerctl stop
bind = , XF86AudioNext, exec, playerctl next
bind = , XF86AudioPrev, exec, playerctl previous

# Touchpad
bindl = , XF86TouchpadToggle, exec, hyprctl keyword "device:asue120a:00-04f3:319b-touchpad:enabled" false

# Fan profile
bind = , XF86Launch4, exec, asusctl profile -n

### Applications
bind = SUPER, return, exec, kitty
bind = SUPER, m, exec, mousepad
bind = SUPER_SHIFT, w, exec, brave
bind = SUPER, d, exec, albert toggle
bind = SUPER, t, exec, thunar
bind = SUPER, n, exec, swaync-client -t -sw

### Workspaces
# Changes the workspace
bind = SUPER, 1, workspace, 1
bind = SUPER, 2, workspace, 2
bind = SUPER, 3, workspace, 3
bind = SUPER, 4, workspace, 4
bind = SUPER, 5, workspace, 5
bind = SUPER, 6, workspace, 6
bind = SUPER, 7, workspace, 7
bind = SUPER, 8, workspace, 8
bind = SUPER, 9, workspace, 9
bind = SUPER, 0, workspace, 10
bind = SUPER, s, togglespecialworkspace,

# Moves the focused window to a workspace, but doesnt switch to the workspace
bind = SUPER_SHIFT, 1, movetoworkspacesilent, 1
bind = SUPER_SHIFT, 2, movetoworkspacesilent, 2
bind = SUPER_SHIFT, 3, movetoworkspacesilent, 3
bind = SUPER_SHIFT, 4, movetoworkspacesilent, 4
bind = SUPER_SHIFT, 5, movetoworkspacesilent, 5
bind = SUPER_SHIFT, 6, movetoworkspacesilent, 6
bind = SUPER_SHIFT, 7, movetoworkspacesilent, 7
bind = SUPER_SHIFT, 8, movetoworkspacesilent, 8
bind = SUPER_SHIFT, 9, movetoworkspacesilent, 9
bind = SUPER_SHIFT, 0, movetoworkspacesilent, 10
bind = SUPER_SHIFT, s, movetoworkspacesilent, special

### Windows
# Closes (not kills) the active window
bind = SUPER_SHIFT, q, killactive,

# Toggles the current window’s floating state
bind = SUPER, space, togglefloating,

# Toggles the focused window’s fullscreen state
bind = SUPER_SHIFT, f, togglefloating,

# Toggles the focused window’s internal fullscreen state without altering the geometry
bind = CONTROL_SHIFT, f, fakefullscreen,

# Pins a window (i.e. show it on all workspaces) note: floating only
bind = SUPER_SHIFT, p, pin,

# Moves the focus in a direction
bind = SUPER, up, movefocus, u
bind = SUPER, down, movefocus, d
bind = SUPER, left, movefocus, l
bind = SUPER, right, movefocus, r
bind = SUPER, l, movefocus, u
bind = SUPER, k, movefocus, d
bind = SUPER, j, movefocus, l
bind = SUPER, semicolon, movefocus, r

# Focuses the next window on a workspace
bind = ALT, tab, cyclenext,
bind = ALT_SHIFT, tab, cyclenext, prev

# Switch focus from current to previously focused window
bind = SUPER, tab, focuscurrentorlast,

# Focuses the urgent window or the last window
bind = SUPER_SHIFT, tab, focusurgentorlast,

# Moves the active window in a direction or to a monitor
bind = SUPER_SHIFT, up, movefocus, u
bind = SUPER_SHIFT, down, movefocus, d
bind = SUPER_SHIFT, left, movefocus, l
bind = SUPER_SHIFT, right, movefocus, r
bind = SUPER_SHIFT, l, movefocus, u
bind = SUPER_SHIFT, k, movefocus, d
bind = SUPER_SHIFT, j, movefocus, l
bind = SUPER_SHIFT, semicolon, movefocus, r

# Swaps the active window with another window in the given direction
bind = SUPER_CONTROL, up, swapwindow, u
bind = SUPER_CONTROL, down, swapwindow, d
bind = SUPER_CONTROL, left, swapwindow, l
bind = SUPER_CONTROL, right, swapwindow, r
bind = SUPER_CONTROL, l, swapwindow, u
bind = SUPER_CONTROL, k, swapwindow, d
bind = SUPER_CONTROL, j, swapwindow, l
bind = SUPER_CONTROL, semicolon, swapwindow, r

# swaps the focused window with the next window on a workspace
bind = SUPER, tab, swapnext,
bind = SUPER_SHIFT, tab, swapnext, prev

# Center the active window note: floating only
bind = SUPER, p, centerwindow,

# Changes the split ratio
binde = SUPER, Semicolon, splitratio, -0.1
binde = SUPER, Apostrophe, splitratio, 0.1

### Groups
# Toggles the current active window into a group
bind = SUPER_SHIFT, t, togglegroup,

# Switches to the next window in a group.
bind = SUPER, BracketRight, changegroupactive, f
bind = SUPER, BracketLeft, changegroupactive, b

# Behaves as moveintogroup if there is a group in the given direction. Behaves as moveoutofgroup if there is no group in the given direction relative to the active group. Otherwise behaves like movewindow.
bind = SUPER_ALT, up, moveintogroup, u
bind = SUPER_ALT, down, moveintogroup, d
bind = SUPER_ALT, left, moveintogroup, l
bind = SUPER_ALT, right, moveintogroup, r
bind = SUPER_ALT, l, moveintogroup, u
bind = SUPER_ALT, k, moveintogroup, d
bind = SUPER_ALT, j, moveintogroup, l
bind = SUPER_ALT, semicolon, moveintogroup, r

### Submaps
# Emergency submap exit
bind = SUPER, escape, exec, hyprctl dispatch submap reset

# Exit Submap
bind = SUPER, x, submap, exit
submap = exit
binde = , l, exec, playerctl -s pause || true && lockscreen
binde = , e, exec, hyprctl dispatch exit
binde = , s, exec, systemctl -i suspend-then-hibernate
binde = , h, exec, systemctl -i hibernate
binde = , r, exec, systemctl -i reboot
binde = , p, exec, systemctl -i poweroff
bind = , escape, submap, exit
submap = reset

# Resize submap
bind = SUPER, r, submap, resize
submap = resize
binde = , up, resizeactive, 0 -10
binde = , down, resizeactive, 0 10
binde = , left, resizeactive, -10 0
binde = , right, resizeactive, 10 0
binde = , l, resizeactive, 0 -10
binde = , k, resizeactive, 0 10
binde = , j, resizeactive, -10 0
binde = , semicolon, resizeactive, 10 0
bind = , escape, submap, reset
submap = reset

# Screenshot submap
bind = , print, submap, screenshot
submap = screenshot
binde = , a, exec, screenshot area
binde = , f, exec, screenshot focused
binde = , w, exec, screenshot window
binde = , o, exec, screenshot output
binde = , s, exec, screenshot screen
bind = , escape, submap, screenshot
submap = reset
