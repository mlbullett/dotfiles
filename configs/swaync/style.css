/*
 * vim: ft=less 
 */

@define-color base   #24273a;
@define-color mantle #1e2030;
@define-color crust  #181926;

@define-color text     #cad3f5;
@define-color subtext0 #a5adcb;
@define-color subtext1 #b8c0e0;

@define-color surface0 #363a4f;
@define-color surface1 #494d64;
@define-color surface2 #5b6078;

@define-color overlay0 #6e738d;
@define-color overlay1 #8087a2;
@define-color overlay2 #939ab7;

@define-color blue      #8aadf4;
@define-color lavender  #b7bdf8;
@define-color sapphire  #7dc4e4;
@define-color sky       #91d7e3;
@define-color teal      #8bd5ca;
@define-color green     #a6da95;
@define-color yellow    #eed49f;
@define-color peach     #f5a97f;
@define-color maroon    #ee99a0;
@define-color red       #ed8796;
@define-color mauve     #c6a0f6;
@define-color pink      #f5bde6;
@define-color flamingo  #f0c6c6;
@define-color rosewater #f4dbd6;

.notification-row {
  outline: none;
}

.notification-row:focus,
.notification-row:hover {
  background: shade(@base, 0.9);
}

.notification {
  border-radius: 12px;
  margin: 6px 12px;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.3), 0 1px 3px 1px rgba(0, 0, 0, 0.7),
    0 2px 6px 2px rgba(0, 0, 0, 0.3);
  padding: 0;
}

/* Uncomment to enable specific urgency colors
.low {
  background: @yellow;
  padding: 6px;
  border-radius: 12px;
}

.normal {
  background: @green;
  padding: 6px;
  border-radius: 12px;
}
*/

.critical {
  background: @red;
  padding: 6px;
  border-radius: 12px;
}

.notification-content {
  background: transparent;
  padding: 6px;
  border-radius: 12px;
}

.close-button {
  background: @yellow;
  color: @text;
  text-shadow: none;
  padding: 0;
  border-radius: 100%;
  margin-top: 10px;
  margin-right: 16px;
  box-shadow: none;
  border: none;
  min-width: 24px;
  min-height: 24px;
}

.close-button:hover {
  box-shadow: none;
  background: @red;
  transition: all 0.15s ease-in-out;
  border: none;
}

.notification-default-action,
.notification-action {
  padding: 4px;
  margin: 0;
  box-shadow: none;
  background: @base;
  border: 1px solid @mauve;
  color: @text;
}

.notification-default-action:hover,
.notification-action:hover {
  -gtk-icon-effect: none;
  background: @surface0;
  color: @text;
}

.notification-default-action {
  border-radius: 12px;
}

/* When alternative actions are visible */
.notification-default-action:not(:only-child) {
  border-bottom-left-radius: 0px;
  border-bottom-right-radius: 0px;
}

.notification-action {
  border-radius: 0px;
  border-top: none;
  border-right: none;
}

/* add bottom border radius to eliminate clipping */
.notification-action:first-child {
  border-bottom-left-radius: 10px;
}

.notification-action:last-child {
  border-bottom-right-radius: 10px;
  border-right: 1px solid @mauve;
}

.image {
}

.body-image {
  margin-top: 6px;
  background-color: @text;
  border-radius: 12px;
}

.summary {
  color: @text;
  text-shadow: none;
}

.time {
  color: @text;
  text-shadow: none;
  margin-right: 18px;
}

.body {
  background: transparent;
  color: @text;
  text-shadow: none;
}

/* The "Notifications" and "Do Not Disturb" text widget */
.top-action-title {
  color: @text;
  text-shadow: none;
}

.control-center-clear-all {
  color: @text;
  text-shadow: none;
  background: @base;
  border: 1px solid @mauve;
  box-shadow: none;
  border-radius: 12px;
}

.control-center-clear-all:hover {
  background: @surface0;
}

.control-center-dnd {
  border-radius: 12px;
  background: @base;
  border: 1px solid @mauve;
  box-shadow: none;
}

.control-center-dnd:checked {
  background: @base;
}

.control-center-dnd slider {
  background: @mauve;
  border-radius: 12px;
}

/* The .control-center Window.
 * Can't apply padding and margin so may be easier to use "> box" instead
 */
.control-center {
  background: @base;
}

/* The first control-center child. May be easier to style this than .control-center */
.control-center > box {
}

.control-center-list {
  background: transparent;
}

.floating-notifications {
  background: transparent;
}

/* Window behind control center and on all other monitors */
.blank-window {
  background: alpha(@crust, 0.25);
}
